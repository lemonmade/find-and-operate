(*
	FIND AND OPERATE.SCPT
	By Chris Sauve of [pxldot](http://pxldot.com).
	See README for details.
*)set text item delimiters to ""tell application "Pages"	try		set theSelection to contents of selection as text	on error		display alert "No text was selected. Please select the text in which you want to do the text operations."		return	end try		if theSelection is "" then		display alert "No text was selected. Please select the text in which you want to do the text operations."		return	end if		try		set textToAdjust to text returned of (display dialog "What would you like to adjust? You can use commas to specify multiple values." default answer "")	on error		return	end try	set my text item delimiters to {", ", ","}	set textToAdjust to every text item of textToAdjust	set my text item delimiters to ""	set matchesFound to {}		repeat with theText in textToAdjust		set the end of matchesFound to ((theSelection as text) contains theText)	end repeat	if matchesFound does not contain {true} then		display dialog "No matches were found for any of the strings you entered."		return	end if		repeat with i from 1 to (length of textToAdjust)		if (item i of matchesFound) then			set theAdjustments to item i of textToAdjust						set theOperations to (choose from list {"Set Character Style", "Set Paragraph Style", "Bold", "Italic", "Underline", "Outline", "Superscript", "Subscript", "Capitalize", "Shadow", "Delete First Character of String", "Delete Every Character of String"} with prompt "What operation(s) would you like to perform on every occurance of \"" & theAdjustments & "\"?" with multiple selections allowed)			if theOperations is false then return						set didReplacement to true			set startingPoint to 1						if theOperations contains "Set Character Style" then				set styleNameList to my selectStyle("character")				set theCharacterStyle to (choose from list styleNameList with prompt "Which character style would you like to apply to \"" & theAdjustments & "\"?")				if theCharacterStyle is false then return				set theCharacterStyle to item 1 of theCharacterStyle				set theStyleToApply to item (my chooseFromList(theCharacterStyle, styleNameList)) of (get every character style of document 1)			end if						if theOperations contains "Set Paragraph Style" then				set styleNameList to my selectStyle("paragraph")				set theParagraphStyle to (choose from list styleNameList with prompt "Which paragraph style would you like to apply to \"" & theAdjustments & "\"?")				if theParagraphStyle is false then return				set theParagraphStyle to item 1 of theParagraphStyle				set theStyleToApply to item (my chooseFromList(theParagraphStyle, styleNameList)) of (get every paragraph style of document 1)			end if						repeat while didReplacement				set theSelection to contents of selection				set theOffset to offset of (theSelection as text) in (body text of document 1 as text)								set didReplacement to startingPoint ≤ (length of (every character of theSelection))				repeat with i from startingPoint to length of (every character of theSelection)					try						if (item i of theSelection) as text is (character 1 of theAdjustments as text) then							set nextText to (items (i + 1) thru (i + (length of every character of theAdjustments) - 1) of theSelection) as text							if (length of every character of theAdjustments is 1) or (nextText contains (characters 2 thru -1 of theAdjustments as text)) then								set startingPoint to i + (length of every character of theAdjustments)								repeat with j from 1 to ((length of every character of theAdjustments))									tell character (theOffset + i + j - 2) of body text of document 1										if theOperations contains {"Delete Every Character of String"} then											delete it										else											repeat with k from 1 to (length of theOperations)												set theOperation to item k of theOperations												if theOperation is "Set Character Style" then													set the character style of it to theStyleToApply												else if theOperation is "Set Paragraph Style" then													set the character style of it to theStyleToApply												else if theOperation is "Superscript" then													set superscript of it to (not superscript of it)												else if theOperation is "Subscript" then													set subscript of it to (not subscript of it)												else if theOperation is "Bold" then													set bold of it to (not bold of it)												else if theOperation is "Italic" then													set italic of it to (not italic of it)												else if theOperation is "Underline" then													set underline type of it to single underline												else if theOperation is "Outline" then													set outline of it to (not outline of it)													--else if theOperation is "Replace with…" then													--	set replacementText to text returned of (display dialog "What would you like to replace " + theAdjustment + " with?" default answer "")													--	set its text to replacementText												else if theOperation is "Capitalize" then													if capitalization type of it is not normal capitalization then														set capitalization type of it to normal capitalization													else														set capitalization type of it to all caps													end if												else if theOperation is "Shadow" then													set the shadow of it to (not shadow of it)																									end if											end repeat										end if									end tell								end repeat								if theOperations contains {"Delete First Character of String"} then									delete character (theOffset + i - 1) of body text of document 1									set startingPoint to startingPoint - 1								end if								set didReplacement to true								exit repeat							else								set didReplacement to false							end if						else							set didReplacement to false						end if					on error						set didReplacement to false					end try				end repeat			end repeat		end if	end repeat		if matchesFound contains {false} then		set noMatchesFound to {}		set noMatchAlert to "The selected text did not contain any matches for "		repeat with i from 1 to length of matchesFound			if item i of matchesFound is false then				set end of noMatchesFound to item i of textToAdjust			end if		end repeat		repeat with i from 1 to length of noMatchesFound			if length of noMatchesFound is 1 then				set noMatchAlert to noMatchAlert & "\"" & item 1 of noMatchesFound & "\"."			else if i = 1 then				set noMatchAlert to noMatchAlert & "\"" & item 1 of noMatchesFound & "\""			else if i < length of noMatchesFound then				set noMatchAlert to noMatchAlert & ", \"" & item i of noMatchesFound & "\""			else				if length of noMatchesFound is 2 then					set noMatchAlert to noMatchAlert & " and \"" & item i of noMatchesFound & "\"."				else					set noMatchAlert to noMatchAlert & ", and \"" & item i of noMatchesFound & "\"."				end if			end if		end repeat		display alert noMatchAlert		return	end if	end tellon selectStyle(theType)	tell application "Pages"		if theType is "character" then			set styleList to every character style of document 1		else			set styleList to every paragraph style of document 1		end if		set styleNameList to {}		repeat with theStyle in styleList			set the end of styleNameList to name of theStyle		end repeat		return styleNameList	end tellend selectStyleon chooseFromList(theString, theList)	repeat with i from 1 to (length of theList)		if theString = item i of theList then			return i		end if	end repeatend chooseFromList